# The config in this file determines what Algorand network the minter will run against.
# If you include a mnemonic in here be sure it's not committed to source control (note: .env is automatically added the .gitignore)
# Alternatively, if you deploy this solution to a cloud environment you can set environment variables rather than using .env

# Local sandbox config, this is what runs on `docker-compose up` e.g. via setup.ps1
# Source: https://github.com/MakerXStudio/algorand-sandbox-dev
ALGOD_TOKEN=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
ALGOD_SERVER=http://localhost
ALGOD_PORT=4001
INDEXER_TOKEN=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
INDEXER_SERVER=http://localhost
INDEXER_PORT=8980

# TestNet config

# AlgoNode - https://algonode.io/api/
# Useful service to target testnet and mainnet without having to run our own node
# You'll need to fund the CREATOR_MNEMONIC account via a dispenser
#ALGOD_TOKEN=
#ALGOD_SERVER=https://testnet-api.algonode.cloud/
#ALGOD_PORT=443
#INDEXER_TOKEN=
#INDEXER_SERVER=https://testnet-idx.algonode.cloud/
#INDEXER_PORT=443
#CREATOR_MNEMONIC={mnemonic of an account with tokens in it via https://bank.testnet.algorand.network/}

# OR:

# PureStake - https://developer.purestake.io/
# Useful service to target testnet and mainnet without having to run our own node
# You'll need to fund the CREATOR_MNEMONIC account via a dispenser
#ALGOD_TOKEN={token}
#ALGOD_SERVER=https://testnet-algorand.api.purestake.io/ps2
#ALGOD_PORT=443
#INDEXER_TOKEN={token}
#INDEXER_SERVER=https://testnet-algorand.api.purestake.io/idx2
#INDEXER_PORT=443
#CREATOR_MNEMONIC={mnemonic of an account with tokens in it via https://bank.testnet.algorand.network/}

# MainNet config
# Same as TestNet config, but replace 'testnet' with 'mainnet' in the urls and make the `CREATOR_MNEMONIC` account one that you create securely and fund from an Exchange
